How did viewing a diff between two versions of a file help you see the bug that was introduced?
- it shows only the relevant lines and not the whole text
- it is presented in an ordered, partitioned and convenient way

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
- I could have all the previous versions I worked on and could compare between them
- I wouldn't have to count on myself to save all the versions and trust in the system
- I wouldn't have to wonder when to save a particular working copy as a version
- I wouldn't have to write any program that will take care of that for me
- In the long run, I'll spend more time programming, and that is the job.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
- automatic save helps if you forget to save manually yourself and don't commit
- self commit can divide the versions in logical order where it would be easier to navigate
- self commit will not intruduce bugs into your code when you are in the middle of writing
- logical separation also helps other people to understand what you have done in the code

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
- some files are dependent on each other and others don't
- if a change in one file can cause a change in another, they should be commited together

How can you use the commands git log and git diff to view the history of files?
- I can use "git log" to see all the versions and their logged changes.
- I can use "git diff ver1 ver2" to compare between 2 versions and see what have changed
- The order in the diff command is important because you want to see new changes as + and not -

How might using version control make you more confident to make changes that could break something?
- I can always revert to a previously working copy
- It helps spot the errors more quickly and easily

Now that you have your workspace set up, what do you want to try using Git for?
- I want to do all my programming using GIT
- I'll start with Xavier, then my project and then work related scripts(itp tests)
